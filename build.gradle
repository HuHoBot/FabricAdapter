plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName.set("HuHoBot-${project.minecraft_version}-Fabric")
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
	maven { url "https://maven.fabricmc.net/" }
}

dependencies {
	// Minecraft依赖
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// 配置文件支持
	implementation "org.yaml:snakeyaml:1.33"

	// WebSocket支持
	implementation "org.java-websocket:Java-WebSocket:1.5.3"
	implementation 'com.alibaba.fastjson2:fastjson2:2.0.52'
}


// 新增配置生成任务
tasks.register('generateServerConfig', Copy) {
	group = 'Build'
	description = 'Generate server config'

	from 'src/main/templates/java'
	into 'src/main/generated/java'

	// 新增文件名处理
	include '**/*.template'
	rename { filename ->
		filename.replace('.template', '')
	}

	filter { line ->
		line.replace('${WS_SERVER_URL}',
				project.findProperty('wsServerUrl') ?: 'ws://127.0.0.1:8080')
	}

	filteringCharset = 'UTF-8'
}

// 将生成的代码目录加入源码集
sourceSets.main.java.srcDir 'src/main/generated/java'

// 确保编译前先执行生成任务
compileJava.dependsOn generateServerConfig

clean {
	delete 'src/main/generated'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

// 确保打包源码前先执行生成任务
sourcesJar.dependsOn generateServerConfig

tasks.shadowJar {
	archiveClassifier.set("") // 最终输出就是 .jar，不加 -all 之类的后缀
	configurations = [project.configurations.runtimeClasspath]

	dependencies {
		include(dependency("org.yaml:snakeyaml"))
		include(dependency("com.alibaba.fastjson2:fastjson2"))
		include(dependency("org.java-websocket:Java-WebSocket"))
	}

	// 显式排除 Fabric / Minecraft 自带的类
	exclude("net/fabricmc/**")
	exclude("net/minecraft/**")
	exclude("com/mojang/**")
}

tasks.build {
	dependsOn tasks.shadowJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		mavenLocal()
	}
}